module pwm (
    input pb_inc, pb_dec, clk, rst,
    output reg pwm_out
);

wire reg_pb_in = ~pb_inc;
wire reg_pb_deb = ~pb_dec;
wire slow_clk;
wire debounced_pb_inc, debounced_pb_dec;

parameter base_freq = 'd10_000_000;
parameter target_freq = 'd10;
parameter count = base_freq/target_freq;

// Reducir el reloj
clock_divider(clk, rst, slow_clk);

// Debouncer
debouncer_ff d0(reg_pb_in, slow_clk, rst, debounced_pb_inc);
debouncer_ff d1(reg_pb_in, slow_clk, rst, debounced_pb_dec);

// Generador de Duty Cycle
// Tenemos que tener el control de 2 cosas (2 alwys)
// 1: Duty Cycle
// 2: Dependiendo del Duty Cycle estamos arriba o abajo
endmodule